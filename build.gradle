plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
}

group = 'com.github.alexdev03'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven { url = 'https://repo.minebench.de/' }

}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.30'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly("io.github.miniplaceholders:miniplaceholders-api:2.1.0")

    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.github.Exlll.ConfigLib:configlib-paper:dev-SNAPSHOT'
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'de.themoep:minedown-adventure:1.7.2-SNAPSHOT'
    implementation 'com.github.alexdev03:drink:1.5.1'
}

shadowJar {
    relocate 'org.jetbrains', 'org.alexdev.libraries'
    relocate 'org.intellij', 'org.alexdev.libraries'
    relocate 'de.themoep', 'org.alexdev.libraries'

    dependencies {
        //noinspection GroovyAssignabilityCheck
        exclude dependency(':slf4j-api')
    }

    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')
}
jar.dependsOn shadowJar
clean.delete "$rootDir/target"

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
